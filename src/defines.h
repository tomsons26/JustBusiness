#pragma once
#include <cstdint>
// this isn't what this had but i need somewhere to put this

enum LocationType : int8_t
{
    LOC_NONE = -1,

    LOC_GO,
    LOC_MEDITERRANEAN_AVENUE,
    LOC_COMMUNITY_CHEST_A,
    LOC_BALTIC_AVENUE,
    LOC_INCOME_TAX,
    LOC_READING_RAILROAD,
    LOC_ORIENTAL_AVENUE,
    LOC_CHANCE_A,
    LOC_VERMONT_AVENUE,
    LOC_CONNECTICUT_AVENUE,
    LOC_JAIL,
    LOC_ST_CHARLES_PLACE,
    LOC_ELECTRIC_COMPANY,
    LOC_STATES_AVENUE,
    LOC_VIRGINIA_AVENUE,
    LOC_PENNSYLVANIA_RAILROAD,
    LOC_ST_JAMES_PLACE,
    LOC_COMMUNITY_CHEST_B,
    LOC_TENNESSEE_AVENUE,
    LOC_NEW_YORK_AVENUE,
    LOC_FREE_PARKING,
    LOC_KENTUCKY_AVENUE,
    LOC_CHANCE_B,
    LOC_INDIANA_AVENUE,
    LOC_ILLINOIS_AVENUE,
    LOC_B_AND_O_RAILROAD,
    LOC_ATLANTIC_AVENUE,
    LOC_VENTNOR_AVENUE,
    LOC_WATER_WORKS,
    LOC_MARVIN_GARDENS,
    LOC_GO_TO_JAIL,
    LOC_PACIFIC_AVENUE,
    LOC_NORTH_CAROLINA_AVENUE,
    LOC_COMMUNITY_CHEST_C,
    LOC_PENNSYLVANIA_AVENUE,
    LOC_SHORT_LINE_RAILROAD,
    LOC_CHANCE_C,
    LOC_PARK_PLACE,
    LOC_LUXURY_TAX,
    LOC_BOARDWALK,

    TOTAL_LOCATIONS,

    LOC_FIRST = 0,
    LOC_LAST = TOTAL_LOCATIONS - 1,
};

enum LocExitDirType : int8_t
{
    EXIT_DIR_LEFT,
    EXIT_DIR_UP,
    EXIT_DIR_RIGHT,
    EXIT_DIR_DOWN,
};

enum BoardSpotType : int8_t
{
    BOARD_SPOT_TYPE_GO,
    BOARD_SPOT_TYPE_JAIL,
    BOARD_SPOT_TYPE_FREE_PARKING,
    BOARD_SPOT_TYPE_GO_TO_JAIL,
    BOARD_SPOT_TYPE_INCOME_TAX,
    BOARD_SPOT_TYPE_LUXURY_TAX,
    BOARD_SPOT_TYPE_UTILITY,
    BOARD_SPOT_TYPE_CHANCE,
    BOARD_SPOT_TYPE_COMMUNITY_CHEST,
    BOARD_SPOT_TYPE_RAILROAD,
    BOARD_SPOT_TYPE_PROPERTY,
};

enum ColorGroupType : int8_t
{
    COLOR_GROUP_NONE = -3,
    COLOR_GROUP_RAILROADS = -2,
    COLOR_GROUP_UTILITIES = -1,

    COLOR_GROUP_DARK_PURPLE,
    COLOR_GROUP_LIGHT_BLUE,
    COLOR_GROUP_PURPLE,
    COLOR_GROUP_ORANGE,
    COLOR_GROUP_RED,
    COLOR_GROUP_YELLOW,
    COLOR_GROUP_GREEN,
    COLOR_GROUP_BLUE,

    TOTAL_COLOR_GROUPS,
};

enum PropertyType : int8_t
{
    PROP_NONE = -1,

    PROP_MEDITERRANEAN_AVENUE,
    PROP_BALTIC_AVENUE,
    PROP_ORIENTAL_AVENUE,
    PROP_VERMONT_AVENUE,
    PROP_CONNECTICUT_AVENUE,
    PROP_ST_CHARLES_PLACE,
    PROP_STATES_AVENUE,
    PROP_VIRGINIA_AVENUE,
    PROP_ST_JAMES_PLACE,
    PROP_TENNESSEE_AVENUE,
    PROP_NEW_YORK_AVENUE,
    PROP_KENTUCKY_AVENUE,
    PROP_INDIANA_AVENUE,
    PROP_ILLINOIS_AVENUE,
    PROP_ATLANTIC_AVENUE,
    PROP_VENTNOR_AVENUE,
    PROP_MARVIN_GARDENS,
    PROP_PACIFIC_AVENUE,
    PROP_NORTH_CAROLINA_AVENUE,
    PROP_PENNSYLVANIA_AVENUE,
    PROP_PARK_PLACE,
    PROP_BOARDWALK,
    PROP_UTIL_ELECTRIC_COMPANY,
    PROP_UTIL_WATER_WORKS,
    PROP_RAILROAD_READING,
    PROP_RAILROAD_PENNSYLVANIA,
    PROP_RAILROAD_B_AND_O,
    PROP_RAILROAD_SHORT_LINE,
    TOTAL_PROPERTIES,

    PROP_FIRST = 0,
    PROP_LAST = TOTAL_PROPERTIES - 1,
};

enum TitleDeedTextColorType : int8_t
{
    TITLE_DEED_TEXT_BLACK = 0,
    TITLE_DEED_TEXT_WHITE = -1,
};

enum GameTokenType : int8_t
{

};

enum ActiveStatusType : int8_t
{
    PLAYER_INACTIVE = 0x0,
    PLAYER_ACTIVE = 0x1,
    PLAYER_BANKRUPT = 0x2,
    ActiveStatusType_3 = 0x3,
    ActiveStatusType_4 = 0x4,
    ActiveStatusType_5 = 0x5,
};

enum AIType : int8_t
{
    AI_TYPE_LOCAL_HUMAN,
    AI_TYPE_LOCAL_COMPUTER,
    AI_TYPE_REMOTE_HUMAN,
    AI_TYPE_REMOTE_COMPUTER,
    TOTAL_AI_TYPES,
};

extern void __cdecl Mem_Copy(void const *source, void *dest, unsigned long bytes_to_copy);

enum OptionGroupType : int8_t
{
    OPTION_GROUP_GAME_OPTIONS,
    OPTION_GROUP_SITE_OPTIONS,
    OPTION_GROUP_SECRET_OPTIONS,
    OPTION_GROUP_INTERNATIONAL_OPTIONS,
    OPTION_GROUP_DEBUG_OPTIONS,
    OPTION_GROUP_TOTAL,

    OPTION_GROUP_FIRST = 0,
};

enum ChanceCardType : int8_t
{

};
enum CommunityChestCardType : int8_t
{

};

enum BoardRefreshFlagType : int8_t
{
    BOARD_REFRESH_NORMAL = 0 << 0,
    BOARD_REFRESH_SHOW_OWNERS = 1 << 0,
    BOARD_REFRESH_MORTGAGING = 1 << 1,
    BOARD_REFRESH_UNMORTGAGING = 1 << 2,
    BOARD_REFRESH_BUYING_SELLING_BUILDINGS = 1 << 3,
    BOARD_REFRESH_SHOW_TITLE_DEED = 1 << 4,
};

enum BuildingStateType : int8_t
{
    NO_HOUSE,
};

enum PlayerType : int8_t
{
    PLAYER_1,
    PLAYER_2,
    PLAYER_3,
    PLAYER_4,
    PLAYER_5,
    PLAYER_6,
    TOTAL_PLAYERS,

    FIRST_PLAYER = PLAYER_1,
    LAST_PLAYER = PLAYER_6,

    ALL_PLAYERS = -1,
    NO_PLAYER = -1,
};